# -- Script which echoes VCS token
askPassScript: |-
  #!/bin/bash
  set -u
  echo ${VCS_TOKEN}

# add repos in following format:
# repos: |-
#  - org/repo-name
# -- List or repositories
repos: |
  - org/repo-name

steward:
  # -- VCS login name
  vcsLogin: ""
  # -- VCS token
  vcsToken: ""
  # -- Name of the git user
  gitAuthorName: steward
  # -- Email of the git user
  gitAuthorEmail: steward@example.com

# -- Sbt credentials
credentialsSbt: |
# If you need to provide Nexus credentials, uncomment the below lines and provide proper credentials
#  credentials += Credentials("Some Nexus Repository Manager", "my.artifact.repo.net", "admin", "admin123")

# -- default.scala-steward.conf
defaultConf: |
# This section allows to define a default config used be Scala Steward
# Once the config was defined here you must modify `args` below and add:
#   --default-repo-conf /opt/config_values/default.scala-steward.conf

# -- If empty, the chart will create the secret containing the vcs token.
#    If not empty - the already existing secret is used.
#    The secret should have a field names VCS_TOKEN
existingSecretName:

image:
  repository: fthomas/scala-steward
  tag: latest
  pullPolicy: IfNotPresent

cron:
  # -- cron expression - when to run kubernetes CronJob
  interval: "@daily"
  # -- Whether to restart cronjob on failure
  restartPolicy: OnFailure

# -- Arguments passed to steward binary
args:
  - --workspace
  - "/opt/scala-steward/workspace"
  - --repos-file
  - "/opt/config_values/repos.md"
  - --git-author-name
  - "$(GIT_AUTHOR_NAME)"
  - --git-author-email
  - "$(GIT_AUTHOR_EMAIL)"
  - --vcs-api-host
  - "https://api.github.com"
  - --vcs-login
  - "$(VCS_LOGIN)"
  - --git-ask-pass
  - "/opt/config_values/git_ask_pass_script.sh"
  - --do-not-fork
# - --default-repo-conf
# - "/opt/config_values/default.scala-steward.conf"

persistence:
  # -- Whether enable persistent volume to store cache
  enabled: true
  # -- Access mode of the PVC
  accessMode: ReadWriteOnce
  # -- Size of the PVC
  size: 10Gi
  # -- Storage class
  storageClassName: standard

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
